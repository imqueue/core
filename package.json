{
  "name": "@imqueue/core",
  "version": "1.13.2",
  "description": "Simple JSON-based messaging queue for inter service communication",
  "keywords": [
    "message-queue",
    "redis",
    "redis-queue",
    "inter-service-communication",
    "json",
    "json-message"
  ],
  "scripts": {
    "prepare-cc-reporter": "[ -f ./cc-test-reporter ] || curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter && chmod +x ./cc-test-reporter",
    "pretest": "npm run prepare-cc-reporter",
    "prepare": "./node_modules/.bin/tsc",
    "test": "./node_modules/.bin/tsc && ./node_modules/.bin/nyc mocha && ./node_modules/.bin/nyc report --reporter=text-lcov && npm run test-coverage",
    "test-fast": "./node_modules/.bin/tsc && ./node_modules/.bin/nyc mocha && /usr/bin/env node -e \"import('open').then(open => open.default('file://`pwd`/coverage/index.html', { wait: false }))\"",
    "test-local": "export COVERALLS_REPO_TOKEN=$IMQ_COVERALLS_TOKEN && npm test && /usr/bin/env node -e \"import('open').then(open => open.default('https://coveralls.io/github/imqueue/imq', { wait: false }))\"",
    "test-dev": "npm run test && npm run clean-js && npm run clean-typedefs && npm run clean-maps",
    "test-coverage": "./cc-test-reporter format-coverage -t lcov -o coverage/codeclimate.json && ./cc-test-reporter upload-coverage -i coverage/codeclimate.json -r 85bb2a18-4ebb-4e48-a2ce-92b7bf438b1a",
    "clean-typedefs": "find . -name '*.d.ts' -not -wholename '*node_modules*' -not -wholename '*generator*' -type f -delete",
    "clean-maps": "find . -name '*.js.map' -not -wholename '*node_modules*' -not -wholename '*generator*' -type f -delete",
    "clean-js": "find . -name '*.js' -not -wholename '*node_modules*' -not -wholename '*generator*' -type f -delete",
    "clean-tests": "rm -rf .nyc_output coverage",
    "clean-doc": "rm -rf docs",
    "clean-benchmark": "rm -rf benchmark-result",
    "clean": "npm run clean-tests && npm run clean-typedefs && npm run clean-maps && npm run clean-js && npm run clean-doc && npm run clean-benchmark",
    "doc": "rm -rf docs && typedoc  --excludePrivate --excludeExternals --hideGenerator --exclude \"**/+(test|node_modules|docs|coverage|benchmark|.nyc_output)/**/*\" --mode file --out ./docs . && /usr/bin/env node -e \"import('open').then(open => open.default('file://`pwd`/docs/index.html',{wait:false}))\""
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/imqueue/core.git"
  },
  "bugs": {
    "url": "https://github.com/imqueue/core/issues"
  },
  "homepage": "https://imqueue.com/",
  "author": "imqueue.com <support@imqueue.com> (https://imqueue.com)",
  "license": "ISC",
  "dependencies": {
    "@types/redis": "^2.8.32",
    "redis": "3.1.2"
  },
  "devDependencies": {
    "@eslint/js": "^9.14.0",
    "@types/chai": "^5.0.1",
    "@types/eslint__eslintrc": "^2.1.2",
    "@types/mocha": "^10.0.9",
    "@types/mock-require": "^3.0.0",
    "@types/node": "^22.9.0",
    "@types/sinon": "^17.0.3",
    "@types/yargs": "^17.0.33",
    "@typescript-eslint/eslint-plugin": "^8.13.0",
    "@typescript-eslint/parser": "^8.13.0",
    "@typescript-eslint/typescript-estree": "^8.13.0",
    "chai": "^4.3.10",
    "coveralls-next": "^4.2.1",
    "eslint": "^9.14.0",
    "eslint-plugin-jsdoc": "^50.4.3",
    "mocha": "^10.8.2",
    "mocha-lcov-reporter": "^1.3.0",
    "mock-require": "^3.0.3",
    "nyc": "^17.1.0",
    "open": "^10.1.0",
    "reflect-metadata": "^0.2.2",
    "sinon": "^19.0.2",
    "source-map-support": "^0.5.21",
    "ts-node": "^10.9.2",
    "typedoc": "^0.26.11",
    "typescript": "^5.6.3",
    "yargs": "^17.7.2"
  },
  "main": "index.js",
  "typescript": {
    "definitions": "index.d.ts"
  },
  "mocha": {
    "require": [
      "ts-node/register",
      "source-map-support/register"
    ],
    "recursive": true,
    "bail": true,
    "full-trace": true
  },
  "nyc": {
    "check-coverage": false,
    "extension": [
      ".ts"
    ],
    "exclude": [
      "**/*.d.ts",
      "**/test/**"
    ],
    "require": [
      "ts-node/register"
    ],
    "reporter": [
      "html",
      "text",
      "text-summary",
      "lcovonly"
    ]
  }
}
